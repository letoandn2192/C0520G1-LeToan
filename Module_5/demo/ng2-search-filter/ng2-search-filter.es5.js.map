{"version":3,"file":"ng2-search-filter.es5.js","sources":["ts/ng2-search-filter.ts","ts/src/ng2-filter.module.ts","ts/src/ng2-filter.pipe.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Ng2SearchPipeModule,Ng2SearchPipe} from './index';\n","import { NgModule } from '@angular/core';\nimport { Ng2SearchPipe } from './ng2-filter.pipe';\nexport class Ng2SearchPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [Ng2SearchPipe],\n  exports: [Ng2SearchPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\nexport class Ng2SearchPipe implements PipeTransform {\n/**\n * @param {?} items object from array\n * @param {?} term term's search\n * @return {?}\n */\ntransform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return Ng2SearchPipe.filter(items, term);\n  }\n/**\n *\n * @param {?} items List of items to filter\n * @param {?} term  a string term to compare with every property of the list\n * \n * @return {?}\n */\nstatic filter(items: Array<{ [key: string]: any }>, term: string): Array<{ [key: string]: any }> {\n\n    const /** @type {?} */ toCompare = term.toLowerCase();\n\n    return items.filter(function (item: any) {\n      for (let /** @type {?} */ property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'filter',\n  pure: false\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";AECA;IAAA;;;;;;;IAMA,iCAGG,GAHH,UAGG,KAAA,EAAA,IAAA;QAFC,EAAJ,CAAA,CAAQ,CAGC,IAAC,IAAO,CAAA,KAAE,CAHnB;YAGyB,MAAzB,CAAgC,KAAA,CAAM;QADlC,MAAJ,CAGW,aAAA,CAAc,MAAC,CAAM,KAAC,EAAM,IAAA,CAAK,CAAC;IAF7C,CAAG;;;;;;;;IAWA,oBAAA,GAHH,UAGG,KAAA,EAAA,IAAA;QADC,IAAJ,gBAAA,CAGU,SAAA,GAAY,IAAA,CAAK,WAAC,EAAW,CAAE;QADrC,MAAJ,CAGW,KAAA,CAAM,MAAC,CAAM,UAAC,IAAe;YAFlC,GAAN,CAAA,CAAW,IAAX,gBAAA,CAGe,QAAA,IAAY,IAAA,CAH3B,CAGiC,CAHjC;gBACQ,EAAR,CAAA,CAAY,IAGC,CAAI,QAAC,CAAQ,KAAK,IAAA,CAH/B,CAGqC,CAHrC;oBACU,QAAV,CAAmB;gBACnB,CAAS;gBACD,EAAR,CAAA,CAAY,IAGC,CAAI,QAAC,CAAQ,CAAC,QAAC,EAAQ,CAAE,WAAC,EAAW,CAAE,QAAC,CAAQ,SAAC,CAAS,CAHvE,CAGyE,CAHzE;oBACU,MAAV,CAGiB,IAAA,CAAK;gBAFtB,CAAS;YACT,CAAO;YACD,MAAN,CAGa,KAAA,CAAM;QAFnB,CAAK,CAGC,CAAC;IAFP,CAAG;;CAjCH;AAqCO,aAAP,CAAA,UAAO,GAAoC;IAF3C,EAGE,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,CAAA;gBAFlB,IAAI,EAGE,QAAA;gBAFN,IAAI,EAGE,KAAA;aAFP,EAGC,EAAG;IAFL,EAGE,IAAA,EAAM,UAAA,EAAW;CAFlB,CAGC;;;;AAED,aAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAAA,EAAA,CAAA,CAAC;AD5CF;IAAA;;;CAAA;AAG0C,mBAA1C,CAAA,UAA0C,GAAoC;IAF9E,EAGE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAFtB,YAAY,EAGE,CAAA,aAAE,CAAa;gBAF7B,OAAO,EAGE,CAAA,aAAE,CAAa;aAFzB,EAGC,EAAG;CAFJ,CAGC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAAA,EAAA,CAAA,CAAC;ADZF;;GAEG;"}
